---
import { Picture } from "astro-imagetools/components";
import Button from "@components/navigation/Button.astro";
import ItemFilter from "@components/navigation/ItemFilter.astro";
import FormattedDate from "@components/FormattedDate.astro";

const {
  title,
  thumbnail,
  hero_buttons,
  intro,
  tag,
  filter,
  filters,
  filter_type,
  style,
  pubDate,
  base_url,
} = Astro.props;

const { slug } = Astro.params;
---

<div
  class={`hero relative overflow-hidden nebulix-parallax ${
    style.hero_surface || "surface-dark"
  } ${style.hero_class || ""}`}
  transition:name={`hero_${slug || Math.random()}`}
  id="header"
>
  {
    thumbnail && (
      <div class="media parallax h-full w-full">
        <Picture
          attributes={{
            picture: {
              class: "sm:h-screen",
              style: `opacity: ${style.hero_image_opacity || 0.6}`,
            },
          }}
          src={thumbnail}
          width={1920}
          height={1080}
          ar={16 / 10}
          alt={title}
          breakpoints={[1000, 1280, 1440, 1536, 1920]}
          sizes="100vw"
          loading="eager"
          layout="fill"
          position="entropy"
          artDirectives={[
            {
              media: "(max-width: 500px)",
              ar: 0.6,
              src: thumbnail,
              breakpoints: [320, 360, 390, 412, 500, 601, 768, 1024, 1200],
            },
            {
              media: "(max-width: 1920px)",
              ar: 0.7,
              src: thumbnail,
              breakpoints: [500, 601, 768, 820, 962, 1280, 1440, 1536, 1920],
            },
          ]}
        />
      </div>
    )
  }

  <div
    class="absolute inset-0 grid place-items-center bg-dark bg-opacity-20"
  >
    <div class="container-xl py-8">
      <div class="max-w-3xl">
        {
          pubDate && (
            <span class="text-overline">
              <FormattedDate date={pubDate} />
            </span>
          )
        }
        <h2 class="title">
          {title}
        </h2>
        <div class="flex-col">
          <!-- {intro && <div class="subtitle balance py2 text-light mt-8"> {intro}</div>} -->
          {intro && <div class="balance py2 font-light font-mono tracking-tight"> {intro}</div>}
        </div>
        

        {
          tag && (
            <ItemFilter
              filters={tag}
              className="mt-4 justify-start"
              links={true}
              {base_url}
            />
          )
        }

        {
          filters && (
            <ItemFilter
              filters={filters}
              className="mt-4"
              links={true}
              active={filter}
              type={filter_type}
              {base_url}
            />
          )
        }
        {
          hero_buttons && hero_buttons.length > 0 && (
            <div class="flex flex-wrap gap-4 py-8">
              {hero_buttons.map((btn) => (
                <Button {...btn} />
              ))}
            </div>
          )
        }
        <slot />
      </div>
    </div>
  </div>
</div>

<style>
  .hero {
    @screen sm {
      min-height: calc(100svh - 4rem);
    }
  }
  .media {
    @screen sm {
      max-height: calc(100svh - 4rem);
    }
  }
  @media only screen and (max-height: 350px) {
  .hero {
    min-height: 370px;
  }
  }
</style>
